String
    String.length() : 문자열의 길이
    String.protype.charAt(index) : 해당 index의 문자
                  .concat(문자열) : 문자열 두개를 이어붙임
                  .replace('a', 'b') : a라는 문자를 b로 대체한다
                  .toLowerCase() : 전부 소문자로 전환
                  .toUpperCase() : 전부 대문자로 전환
                  .split() : 분할, 쪼개기
                  .repeat(n) : n번 문자열 반복

                  추후 프로토타입을 다시 상세히 다룰때 공부할 것

Date
    날짜와 시간을 생성하는 빌트인 함수
    -> 로컬 컴퓨터 환경 시간 기준 -> 라이브러리(도구) >> day.js, mommentJS, luxon

    * 아하 모먼트

      협정 세계시 (1972년 1월 1일에 지정되었습니다.)
      유닉스의 시간이 지나기 시작한 1970년도 1월 1일 자정을 기준으로 몇초가 지났는지 밀리세컨초로
      변환한 것을 utc(협정 세계시)

      한국 : utc + 9

      서버에서 시간을 저장할 때 무조건 utc을 기준으로 저장
      어느 나라에서든 시간대의 차이가 없이 서비스를 이용할 수 있도록 하기위해서
      프론트엔드에서 현재 위치를 기준으로 utc타임을 변환하여 보여줌

     ------------------------------------------------------------------

// 깊은 복사와 얕은 복사, map, set, 조건부 연산자, 삼항연산자

-----------------------------------------------------------

 DOM API
    (Document Object Model) 문서 객체 모델
        흔히 HTML에서 사용하는 div, span, input과 같은 요소를 DOM이라고 한다

    (Application Programming Interface) API
        응용 프로그램 사이에서 통신에 사용되는 언어와 메시지를 이야기 합니다.

 -------------------------------------------------------------------------

 DOM selector - 특정한 요소를 선택

    ex)
        <div id='menu'></div>

        HttpCollection - Live
        NodeList - noneLive

    1. document.getElementById() // 단일 객체 반환
        괄호 안에 전달된 id 값을 가지고 있는 요소를 선택

    2. document.getElementsByClassName() // 유사 배열 객체 반환
        - HttpCollection 괄호 안에 전달된 class를 가지고 있는 모든 요소를 선택
    
    3. document.getElementsByTagName()
        - HttpCollection

    4. document.getElementsByName() 
        - NodeList

    5. document.querySelector() // 단일 객체 반환
     -> 인자로 CSS 선택자
     -> 만약 여러개가 있다면 가장 먼저 검색되는 것을 가지고 온다
     
    6. document.querySelectorAll() // 복수 객체 반환
        - NodeList


    * NodeList vs HttpCollection
    HttpCollection: live  , 유사 배열 객체 + 이터러블
    NodeList: none-live , 유사 배열 객체 + 이터러블

        ex) 
            <div class="red"/> 
            <div class="red"/> 
            <div class="red"/> 

            // const $els = document.getElementsByClassName('red')
            const $els = document.querySelectorAll('.red')

            for(let i =0; i<$els.length; i++){
                $els[i].className = 'blue'
            }

    * 유사배열객체
    객체는 객체인데 배열의 속성을 가지고 있는 객체
        let obj {
            0: '1',
            1: '2',
            length: 2
        }

        for(let i=0; i<obj.length; i++){
            console.log(obj[i])
        }


    * for of(o) for(o)
    * forEach(x) map,filter(x)
    * NodeList는 forEach 사용이 가능, 단 배열 메서드 사용불가 

    * HTMLCollection, NodeList을 배열로 사용하고 싶다
    유사배열 객체 배열로 제작할 수 있다.
        (1) Array.from(els)
        (2) const arr = [...els]
        (3) HTMLCollection.prototype.forEach = Array.prototype.forEach (권장x)

-------------------------------------------------------------------------------------------------------

    DomAPI 왜 사용할까?
        
        사용자의 행위에 따라
        HTML 요소(div,span)의 properties를 바꾸기 위해 사용합니다

        => html, css 정적인 페이지 => 동적으로 만들기 위해서

-------------------------------------------------------------------------------------------------------

    properties (속성)

        개발자 도구에서 확인 가능, DOM API를 사용하는 궁극적인 목표

        value  // input 값을 가져올때
        innerText   // <div id="id">상준</div>
        innerHTML

        style
        classList

        onclick => 요소를 클릭했을 때
        onchange => 요소의 값이 변경 되었을 때
        onmouseover => 요소에서 마우스가 올라갔을 때
        onmouseleave => 요소에서 마우스가 떠났을 때
        onKeydown // 키보드가 눌렀을 때의 이벤트
        on => 이벤트, 사용자의 행위
        

