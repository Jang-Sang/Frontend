

 * 배열의 고차함수 - 배열 중 제일 중요한 파트 프론트엔드 개발자가 된다면 제일 많이 사용하는 것
    
    map, filter, find, findIndex, reduce, every, some, sort
    
    keyword
        * 새로운 배열 반환

    map
        배열의 모든 요소를 순차적으로 순회하며 인자로 주어진 콜백함수의 반환 값으로
        새로운 배열을 생성, 기존 배열을 훼손하지 않습니다.
        - 처음부터 순서대로 한번씩 모두 다시 도는 것
        const arr = [1,2,3,4,5]
        
                               요소  인덱스  원본배열
        const newArr = arr.map((el, index, originArr) => {
            return {
                originNumber: el,
                addNumber: el + 10
            }
        })

        ex)
                     ---arr--
        function map(originArr, callback){

            cost returnArr = [];
            for(let i =0; i< originArr.length; i++){
                const result = callback(originArr[i], i, originArr)..
                returnArr.push(result) 

                // {originNumber:1, addNumber:11}

            }
            return returnArr
        }

        console.log(newArr)
        [ {originNumber:1, addNumber: 11}, {originArr:2, addNumber:12 } ... ]

        나중에 일할때 순차적인 것을 잘 모르면 일할때 고생한다.
        for문의 반복이지만 배열을 반환한다.


    filter
        배열의 모든 요소를 순회하며 콜백함수의 반환 값이 true인 요소만 추출하여 새로운 배열을 만든다
        false면 새로운 배열에서 제외한다

        ex)

            const arr = [
                {
                    id: 1
                    name: "김성용"
                },
                {
                    id: 2
                    name: "김성용2"                    
                },
                {
                    id: 3
                    name: "김성용3"
                }
            ]


            const filterArr = arr.filter((el, index, originArr) => {
                return el.id !== 1
            })
    
            console.log(filterArr)
            [ {id:2, name:"김성용2"}, {id:3, name"김성용3"} ]


--------------------------------------------------------------------------------------------------

    find
        배열의 모든 요소를 순회하며 주어진 콜백함수를 실행하고 그 반환값이 true인 것 중 첫번째 요소를 반환 

    findIndex 
        배열의 모든 요소를 순회하며 주어진 콜백함수를 실행하고 그 반환값이 true인 것 중 첫번째 요소의 인덱스를 반환
        찾고자 하는 데이터가 없다면 -1을 반환
    
--------------------------------------------------------------------------------------------------


    reduce
        누적 값을 구할 때 많이 사용, 요소들이 계산된 누적값과 현재 요소를 return


--------------------------------------------------------------------------------------------------
  
    
    every
        배열의 모든 요소를 순회하며 해당 조건이 모두 만족하면 true 아니면 false를 반환


    some
        배열의 모든 요소를 순회하며 해당 조건이 일부 만족하면 true 아니면 false를 반환

--------------------------------------------------------------------------------------------------

    이터러블한 객체
        - 순회 가능한 객체

    이터러블 객체의 반복문
        - for
        - forEach
        - for in
        - for of

    배열의 생성
        - Array.from()
        - Array.fill()

--------------------------------------------------------------------------------------------------